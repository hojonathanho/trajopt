// autogenerated forward declaration header
#pragma once
#include <boost/shared_ptr.hpp>
namespace sco {
class GurobiModel;
typedef boost::shared_ptr<GurobiModel> GurobiModelPtr;
class ConvexObjective;
typedef boost::shared_ptr<ConvexObjective> ConvexObjectivePtr;
class ConvexConstraints;
typedef boost::shared_ptr<ConvexConstraints> ConvexConstraintsPtr;
class Cost;
typedef boost::shared_ptr<Cost> CostPtr;
class Constraint;
typedef boost::shared_ptr<Constraint> ConstraintPtr;
class EqConstraint;
typedef boost::shared_ptr<EqConstraint> EqConstraintPtr;
class IneqConstraint;
typedef boost::shared_ptr<IneqConstraint> IneqConstraintPtr;
class OptProb;
typedef boost::shared_ptr<OptProb> OptProbPtr;
class CostFromFunc;
typedef boost::shared_ptr<CostFromFunc> CostFromFuncPtr;
class ConstraintFromFunc;
typedef boost::shared_ptr<ConstraintFromFunc> ConstraintFromFuncPtr;
class Optimizer;
typedef boost::shared_ptr<Optimizer> OptimizerPtr;
class BasicTrustRegionSQP;
typedef boost::shared_ptr<BasicTrustRegionSQP> BasicTrustRegionSQPPtr;
class Model;
typedef boost::shared_ptr<Model> ModelPtr;
class VarRep;
typedef boost::shared_ptr<VarRep> VarRepPtr;
class Var;
typedef boost::shared_ptr<Var> VarPtr;
class CntRep;
typedef boost::shared_ptr<CntRep> CntRepPtr;
class Cnt;
typedef boost::shared_ptr<Cnt> CntPtr;
class AffExpr;
typedef boost::shared_ptr<AffExpr> AffExprPtr;
class QuadExpr;
typedef boost::shared_ptr<QuadExpr> QuadExprPtr;
}